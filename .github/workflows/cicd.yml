name: Deploy Sentiment Analysis App to EC2

on:
  push:
    branches:
      - main

env:
  ECR_REGISTRY: 703671911783.dkr.ecr.ap-south-1.amazonaws.com
  ECR_REPOSITORY: nlp_sentiment_tweets
  IMAGE_TAG: latest

jobs:
  Continuous-Integration:
    runs-on: ubuntu-latest

    steps:
      - name: üöÄ Checkout Code
        uses: actions/checkout@v3

      - name: üîë Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: üîê Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: üèóÔ∏è Set Up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: üèóÔ∏è Build, Tag & Push Docker Image to Amazon ECR
        id: build-image
        run: |
          docker buildx create --use
          docker buildx inspect --bootstrap
          docker buildx build --platform linux/amd64 --push \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          
          echo "IMAGE_URI=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV

  Continuous-Deployment:
    needs: Continuous-Integration
    runs-on: ubuntu-latest

    steps:
      - name: üîë Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: üöÄ Deploy Docker Container on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            echo "üîÑ Updating system..."
            sudo apt-get update -y && sudo apt-get install -y awscli docker || true
            
            echo "üîÑ Restarting Docker service..."
            sudo systemctl restart docker || true

            echo "üîë Logging into AWS ECR..."
            sudo docker logout $ECR_REGISTRY || true
            aws ecr get-login-password --region ${{ secrets.AWS_DEFAULT_REGION }} | sudo docker login --username AWS --password-stdin $ECR_REGISTRY

            echo "üõë Stopping and removing old containers..."
            sudo docker ps -q | xargs -r sudo docker stop || true
            sudo docker ps -aq | xargs -r sudo docker rm || true

            echo "üßπ Removing unused Docker images..."
            sudo docker system prune -af || true

            echo "‚¨áÔ∏è Pulling latest Docker image..."
            sudo docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

            echo "üöÄ Running new container..."
            sudo docker run -d --name sentiment_app -p 8080:8080 \
              -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
              -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
              -e AWS_DEFAULT_REGION="${{ secrets.AWS_DEFAULT_REGION }}" \
              $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

            echo "‚úÖ Deployment Completed Successfully!"
